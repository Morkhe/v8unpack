#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = 

INC = 
CFLAGS = -Wall -std=c++11
RESINC = 
LIBDIR = 
LIB = -static -lz -lboost_filesystem -lboost_system
LDFLAGS = 

INC_V8UNPACK = $(INC)
CFLAGS_V8UNPACK = $(CFLAGS) -O2
RESINC_V8UNPACK = $(RESINC)
RCFLAGS_V8UNPACK = $(RCFLAGS)
LIBDIR_V8UNPACK = $(LIBDIR)
LIB_V8UNPACK = $(LIB) 
LDFLAGS_V8UNPACK = $(LDFLAGS) -s
OBJDIR_V8UNPACK = obj/Release
DEP_V8UNPACK = 
OUT_V8UNPACK = bin/Release/v8unpack

INC_V8VERSIONS = $(INC)
CFLAGS_V8VERSIONS = $(CFLAGS) -O2
RESINC_V8VERSIONS = $(RESINC)
RCFLAGS_V8VERSIONS = $(RCFLAGS)
LIBDIR_V8VERSIONS = $(LIBDIR)
LIB_V8VERSIONS = $(LIB) 
LDFLAGS_V8VERSIONS = $(LDFLAGS) -s
OBJDIR_V8VERSIONS = obj/Release
DEP_V8VERSIONS = 
OUT_V8VERSIONS = bin/Release/v8versions

OBJ_V8UNPACK = $(OBJDIR_V8UNPACK)/src/v8unpack/V8File.o $(OBJDIR_V8UNPACK)/src/v8unpack/main.o
OBJ_V8VERSIONS = $(OBJDIR_V8VERSIONS)/src/v8versions/versions.o $(OBJDIR_V8VERSIONS)/src/v8versions/main.o

PREFIX=$(DESTDIR)/usr/bin
BASH_COMPLETION_PREFIX=$(DESTDIR)/etc/bash_completion.d

all: v8unpack v8versions

install: $(OUT_V8UNPACK) $(OUT_V8VERSIONS)
	test -d $(PREFIX) || mkdir -p $(PREFIX)
	cp bin/Release/v8unpack $(PREFIX)/v8unpack
	cp bin/Release/v8versions $(PREFIX)/v8versions
	test -d $(BASH_COMPLETION_PREFIX) || mkdir -p $(BASH_COMPLETION_PREFIX)
	cp bash_completion.sh $(BASH_COMPLETION_PREFIX)/v8unpack

uninstall:
	rm $(PREFIX)/v8unpack
	rm $(PREFIX)/v8versions
	rm $(BASH_COMPLETION_PREFIX)/v8unpack

clean: clean_release

before_release: bin/Release

bin/Release:
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_V8UNPACK)/src/v8unpack || mkdir -p $(OBJDIR_V8UNPACK)/src/v8unpack
	test -d $(OBJDIR_V8VERSIONS)/src/v8versions || mkdir -p $(OBJDIR_V8VERSIONS)/src/v8versions

v8unpack: $(OUT_V8UNPACK)

v8versions: $(OUT_V8VERSIONS)

$(OUT_V8UNPACK): bin/Release $(OBJ_V8UNPACK) $(DEP_V8UNPACK)
	$(LD) $(LIBDIR_V8UNPACK) -o $(OUT_V8UNPACK) $(OBJ_V8UNPACK)  $(LDFLAGS_V8UNPACK) $(LIB_V8UNPACK)

$(OBJDIR_V8UNPACK)/src/v8unpack/V8File.o: src/v8unpack/V8File.cpp src/v8unpack/V8File.h
	$(CXX) -D__LINUX $(CFLAGS_V8UNPACK) $(INC_V8UNPACK) -c $< -o $@

$(OBJDIR_V8UNPACK)/src/v8unpack/main.o: src/v8unpack/main.cpp src/v8unpack/V8File.h
	$(CXX) -D__LINUX $(CFLAGS_V8UNPACK) $(INC_V8UNPACK) -c $< -o $@

$(OUT_V8VERSIONS): bin/Release $(OBJ_V8VERSIONS) $(DEP_V8VERSIONS)
	$(LD) $(LIBDIR_V8VERSIONS) -o $(OUT_V8VERSIONS) $(OBJ_V8VERSIONS)  $(LDFLAGS_V8VERSIONS) $(LIB_V8VERSIONS)

$(OBJDIR_V8VERSIONS)/src/v8versions/versions.o: src/v8versions/versions.cxx src/v8versions/versions.hxx
	$(CXX) -D__LINUX $(CFLAGS_V8VERSIONS) $(INC_V8VERSIONS) -c $< -o $@

$(OBJDIR_V8VERSIONS)/src/v8versions/main.o: src/v8versions/main.cxx src/v8versions/versions.hxx
	$(CXX) -D__LINUX $(CFLAGS_V8VERSIONS) $(INC_V8VERSIONS) -c $< -o $@

clean_release: 
	rm -f $(OBJ_V8UNPACK) $(OUT_V8UNPACK)
	rm -rf bin/Release
	rm -rf $(OBJDIR_V8UNPACK)/src
	rm -rf $(OBJDIR_V8VERSIONS)/src

.PHONY: before_release clean_release install uninstall v8unpack v8versions

